#!/bin/bash

set -eu

source "${BASH_SOURCE%/*}"/spacemacs.sh

exec {prompt}>&2
exec {log}> >(grep -vx '' >&$prompt)

anykey() {
  read -n1 -p 'Hit any key to proceed: ' -s 2>&$prompt
  echo 2>&$prompt
}
elisp() {
  local script
  case $1 in
    kill) script='(progn (defun yes-or-no-p (p) t) (kill-emacs))';;
    sync) script='(dotspacemacs/sync-configuration-layers)';;
    update) script='(configuration-layer/update-packages t)';;
    *) script=;;
  esac
  emacsclient -e "$script" >/dev/null || :
}
git-pull() {
  git fetch --prune
  git merge --ff-only "$1"
}
insert-layer() {
  local b='[[:blank:]]'
  local layers=dotspacemacs-configuration-layers
  local pattern="^$b*$layers$b*$"
  local subst='{n;s/$/hatsusato/}'
  sed "/$pattern/$subst" "$1"
}
update-dot() {
  local template=$HOME/.emacs.d/core/templates/.spacemacs.template
  local dotfile=$HOME/.spacemacs
  insert-layer "$template" >"$dotfile"
  diff -u "$template" "$dotfile" || :
}

exec 2>&$log
resolve-hup
spacemacs-exists && elisp kill
(cd "$HOME"/.emacs.d; git-pull origin/develop)
(cd "$HOME"/.emacs.d/private/hatsusato; git-pull master)
update-dot
anykey
emacs --fg-daemon &
until spacemacs-exists; do
  sleep 0.1
done
elisp update
elisp sync
elisp kill
spacemacs-daemon
